{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T16:24:09+01:00"}
{"level":"info","msg":"Using kube context 'minikube'","time":"2024-05-23T16:24:09+01:00"}
info Created namespace: devbuild:joke-server Rebuild image vfiftyfive/joke-server because tag is missingbuild:joke-server Building image 'vfiftyfive/joke-server:ada7983' with engine 'docker'build:joke-worker Rebuild image vfiftyfive/joke-worker because tag is missingbuild:joke-worker Building image 'vfiftyfive/joke-worker:ada7983' with engine 'docker'build:joke-worker Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  7.799MBSending build context to Docker daemon  12.81MBSending build context to Docker daemon  18.38MBSending build context to Docker daemon  25.07MBSending build context to Docker daemon  27.54MBbuild:joke-server Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  7.242MBSending build context to Docker daemon  12.81MBSending build context to Docker daemon  17.83MBSending build context to Docker daemon  24.51MBSending build context to Docker daemon  27.54MBbuild:joke-worker Step 1/8 : FROM golang:1.20.2build:joke-server Step 1/9 : FROM golang:1.20.2build:joke-worker 1.20.2: Pulling from library/golangbuild:joke-server 1.20.2: Pulling from library/golangbuild:joke-worker 8022b074731d: Pulling fs layerbuild:joke-worker 7971239fe1d6: Pulling fs layerbuild:joke-worker 26c861b53509: Pulling fs layerbuild:joke-worker 1714880ecc1c: Pulling fs layerbuild:joke-worker c71e83b44ada: Pulling fs layerbuild:joke-worker e4448c041760: Pulling fs layerbuild:joke-worker 736f744dca4b: Pulling fs layerbuild:joke-worker 1714880ecc1c: Waitingbuild:joke-worker e4448c041760: Waitingbuild:joke-worker c71e83b44ada: Waitingbuild:joke-worker 736f744dca4b: Waitingbuild:joke-server 8022b074731d: Pulling fs layerbuild:joke-server 7971239fe1d6: Pulling fs layerbuild:joke-server 26c861b53509: Pulling fs layerbuild:joke-server 1714880ecc1c: Pulling fs layerbuild:joke-server c71e83b44ada: Pulling fs layerbuild:joke-server e4448c041760: Pulling fs layerbuild:joke-server 736f744dca4b: Pulling fs layerbuild:joke-server 736f744dca4b: Waitingbuild:joke-server 1714880ecc1c: Waitingbuild:joke-server c71e83b44ada: Waitingbuild:joke-server e4448c041760: Waitingbuild:joke-worker 7971239fe1d6: Verifying Checksumbuild:joke-server 7971239fe1d6: Verifying Checksumbuild:joke-server 7971239fe1d6: Download completebuild:joke-worker 7971239fe1d6: Download completebuild:joke-worker 26c861b53509: Download completebuild:joke-server 26c861b53509: Verifying Checksumbuild:joke-server 26c861b53509: Download completebuild:joke-server 1714880ecc1c: Verifying Checksumbuild:joke-server 1714880ecc1c: Download completebuild:joke-worker 1714880ecc1c: Download completebuild:joke-server 8022b074731d: Download completebuild:joke-worker 8022b074731d: Download completebuild:joke-worker 736f744dca4b: Verifying Checksumbuild:joke-worker 736f744dca4b: Download completebuild:joke-server 736f744dca4b: Verifying Checksumbuild:joke-server 736f744dca4b: Download completebuild:joke-server 8022b074731d: Pull completebuild:joke-worker 8022b074731d: Pull completebuild:joke-worker 7971239fe1d6: Pull completebuild:joke-server 7971239fe1d6: Pull completebuild:joke-worker 26c861b53509: Pull completebuild:joke-server 26c861b53509: Pull completebuild:joke-worker 1714880ecc1c: Pull completebuild:joke-server 1714880ecc1c: Pull completebuild:joke-worker c71e83b44ada: Verifying Checksumbuild:joke-worker c71e83b44ada: Download completebuild:joke-server c71e83b44ada: Download completebuild:joke-worker e4448c041760: Verifying Checksumbuild:joke-server e4448c041760: Verifying Checksumbuild:joke-server e4448c041760: Download completebuild:joke-worker e4448c041760: Download completebuild:joke-worker c71e83b44ada: Pull completebuild:joke-server c71e83b44ada: Pull completebuild:joke-server e4448c041760: Pull completebuild:joke-worker e4448c041760: Pull completebuild:joke-server 736f744dca4b: Pull completebuild:joke-worker 736f744dca4b: Pull completebuild:joke-server Digest: sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616dbuild:joke-server Status: Downloaded newer image for golang:1.20.2build:joke-worker Digest: sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616dbuild:joke-worker Status: Image is up to date for golang:1.20.2build:joke-worker  ---> c71f9fb2e04fbuild:joke-worker Step 2/8 : WORKDIR /appbuild:joke-server  ---> c71f9fb2e04fbuild:joke-server Step 2/9 : WORKDIR /appbuild:joke-worker  ---> Running in db3ec6dd0ec7build:joke-server  ---> Running in f7fb9b3d6fc3build:joke-worker  ---> 88cf3cf84a03build:joke-worker Step 3/8 : COPY go.mod go.sum ./build:joke-server  ---> dcfdadaaa0e1build:joke-server Step 3/9 : COPY go.mod go.sum ./build:joke-worker  ---> 3889f620d03ebuild:joke-worker Step 4/8 : RUN go mod downloadbuild:joke-server  ---> 2f4455b28b77build:joke-server Step 4/9 : RUN go mod downloadbuild:joke-server  ---> Running in b47658962ab9build:joke-worker  ---> Running in 8caca4542b82build:joke-server  ---> 1b0d02266afebuild:joke-server Step 5/9 : COPY cmd/joke-server/main.go cmd/joke-server/build:joke-worker  ---> 289ceed2708abuild:joke-worker Step 5/8 : COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-server  ---> 1212095806e7build:joke-server Step 6/9 : COPY internal/ internal/build:joke-worker  ---> 8ffbae792a30build:joke-worker Step 6/8 : COPY internal/ internal/build:joke-server  ---> 49704d3d1240build:joke-server Step 7/9 : RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server  ---> Running in ef649c0b0de9build:joke-worker  ---> b2d12da02802build:joke-worker Step 7/8 : RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker  ---> Running in 0b12f7b739e6build:joke-server  ---> 376c8f0550e7build:joke-server Step 8/9 : EXPOSE 8080build:joke-server  ---> Running in 9f58c1f28d53build:joke-worker  ---> c1272bd6b445build:joke-worker Step 8/8 : CMD ["./joke-worker"]build:joke-worker  ---> Running in 59f1350659a9build:joke-server  ---> d2d04adb0f2fbuild:joke-server Step 9/9 : CMD ["./joke-server"]build:joke-worker  ---> a6b77d5bb949build:joke-worker Successfully built a6b77d5bb949build:joke-worker Successfully tagged vfiftyfive/joke-worker:ada7983build:joke-server  ---> Running in bf10e01a88ddbuild:joke-worker Skip image push for vfiftyfive/joke-workerbuild:joke-worker Done processing image 'vfiftyfive/joke-worker'build:joke-worker Done building image vfiftyfive/joke-worker:ada7983 (joke-worker)build:joke-server  ---> 0eb92e7052eabuild:joke-server Successfully built 0eb92e7052eabuild:joke-server Successfully tagged vfiftyfive/joke-server:ada7983build:joke-server Skip image push for vfiftyfive/joke-serverbuild:joke-server Done processing image 'vfiftyfive/joke-server'build:joke-server Done building image vfiftyfive/joke-server:ada7983 (joke-server)Execute hook 'Decrypt OPENAI_API_KEY' at before:deployFailed to get the data key required to decrypt the SOPS file.Group 0: FAILED0425B6496C542628: FAILED- | could not decrypt data key with PGP key:| github.com/ProtonMail/go-crypto/openpgp error: Could not| load secring: open /Users/nvermande/.gnupg/secring.gpg: no| such file or directory; GPG binary error: exit status 2Recovery failed because no master key was able to decrypt the file. Inorder for SOPS to recover the file, at least one key has to be successful,but none were.error: no objects passed to apply{"level":"error","msg":"exit status 1","time":"2024-05-23T16:25:27+01:00"}
{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T16:27:08+01:00"}
{"level":"info","msg":"Using kube context 'minikube'","time":"2024-05-23T16:27:08+01:00"}
build:joke-worker Rebuild image vfiftyfive/joke-worker because build context has changedbuild:joke-worker Building image 'vfiftyfive/joke-worker:ada7983' with engine 'docker'build:joke-server Rebuild image vfiftyfive/joke-server because build context has changedbuild:joke-server Building image 'vfiftyfive/joke-server:ada7983' with engine 'docker'build:joke-worker Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  8.913MBSending build context to Docker daemon  15.04MBSending build context to Docker daemon  20.61MBSending build context to Docker daemon   27.3MBSending build context to Docker daemon  27.55MBbuild:joke-server Sending build context to Docker daemon  557.1kBSending build context to Docker daemon   9.47MBSending build context to Docker daemon   15.6MBSending build context to Docker daemon  21.73MBSending build context to Docker daemon   27.3MBSending build context to Docker daemon  27.55MBbuild:joke-worker Step 1/8 : FROM golang:1.20.2build:joke-worker  ---> c71f9fb2e04fbuild:joke-worker Step 2/8 : WORKDIR /appbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> dcfdadaaa0e1build:joke-worker Step 3/8 : COPY go.mod go.sum ./build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2f4455b28b77build:joke-worker Step 4/8 : RUN go mod downloadbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> 1b0d02266afebuild:joke-worker Step 5/8 : COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-server Step 1/9 : FROM golang:1.20.2build:joke-server  ---> c71f9fb2e04fbuild:joke-server Step 2/9 : WORKDIR /appbuild:joke-server  ---> Using cachebuild:joke-server  ---> dcfdadaaa0e1build:joke-server Step 3/9 : COPY go.mod go.sum ./build:joke-server  ---> Using cachebuild:joke-server  ---> 2f4455b28b77build:joke-server Step 4/9 : RUN go mod downloadbuild:joke-server  ---> Using cachebuild:joke-server  ---> 1b0d02266afebuild:joke-server Step 5/9 : COPY cmd/joke-server/main.go cmd/joke-server/build:joke-server  ---> Using cachebuild:joke-server  ---> 1212095806e7build:joke-server Step 6/9 : COPY internal/ internal/build:joke-server  ---> Using cachebuild:joke-server  ---> 49704d3d1240build:joke-server Step 7/9 : RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server  ---> Using cachebuild:joke-server  ---> 376c8f0550e7build:joke-server Step 8/9 : EXPOSE 8080build:joke-server  ---> Using cachebuild:joke-server  ---> d2d04adb0f2fbuild:joke-server Step 9/9 : CMD ["./joke-server"]build:joke-server  ---> Using cachebuild:joke-server  ---> 0eb92e7052eabuild:joke-server Successfully built 0eb92e7052eabuild:joke-server Successfully tagged vfiftyfive/joke-server:ada7983build:joke-server Skip image push for vfiftyfive/joke-serverbuild:joke-server Done processing image 'vfiftyfive/joke-server'build:joke-server Done building image vfiftyfive/joke-server:ada7983 (joke-server)build:joke-server Newly built image 'vfiftyfive/joke-server' has the same tag as in the last build (ada7983), this can lead to problems that the image during deployment is not updatedbuild:joke-worker  ---> 2398dc26f185build:joke-worker Step 6/8 : COPY internal/ internal/build:joke-worker  ---> 731f65846c55build:joke-worker Step 7/8 : RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker  ---> Running in 2c5b40623360build:joke-worker  ---> a3a3e59a4560build:joke-worker Step 8/8 : CMD ["./joke-worker"]build:joke-worker  ---> Running in 550a62999f3dbuild:joke-worker  ---> 23fa6e002447build:joke-worker Successfully built 23fa6e002447build:joke-worker Successfully tagged vfiftyfive/joke-worker:ada7983build:joke-worker Skip image push for vfiftyfive/joke-workerbuild:joke-worker Done processing image 'vfiftyfive/joke-worker'build:joke-worker Done building image vfiftyfive/joke-worker:ada7983 (joke-worker)build:joke-worker Newly built image 'vfiftyfive/joke-worker' has the same tag as in the last build (ada7983), this can lead to problems that the image during deployment is not updatedExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key createddeploy:redis-operator Deploying chart redis-operator (redis-operator) with helm...deploy:mongodb-operator Deploying chart community-operator (mongodb-operator) with helm...deploy:mongodb-operator Deployed helm chart (Release revision: 1)deploy:mongodb-operator Successfully deployed mongodb-operator with helmdeploy:redis-operator Deployed helm chart (Release revision: 1)deploy:redis-operator Successfully deployed redis-operator with helmExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:nats Deploying chart nats (nats) with helm...deploy:joke-server Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-server) with helm...deploy:joke-worker Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-worker) with helm...deploy:custom-resources Applying manifests with kubectl...deploy:custom-resources mongodbcommunity.mongodbcommunity.mongodb.com/mongodb createddeploy:custom-resources secret/user-password createddeploy:custom-resources redis.redis.redis.opstreelabs.in/redis createddeploy:custom-resources Successfully deployed custom-resources with kubectldeploy:joke-worker Deployed helm chart (Release revision: 1)deploy:joke-worker Successfully deployed joke-worker with helmdeploy:joke-server Deployed helm chart (Release revision: 1)deploy:joke-server Successfully deployed joke-server with helmdeploy:nats Deployed helm chart (Release revision: 1)deploy:nats Successfully deployed nats with helm{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T16:28:30+01:00"}
{"level":"info","msg":"Using kube context 'minikube'","time":"2024-05-23T16:28:30+01:00"}
build:joke-worker Rebuild image vfiftyfive/joke-worker because build context has changedbuild:joke-worker Building image 'vfiftyfive/joke-worker:ada7983' with engine 'docker'build:joke-server Rebuild image vfiftyfive/joke-server because build context has changedbuild:joke-server Building image 'vfiftyfive/joke-server:ada7983' with engine 'docker'build:joke-worker Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  7.799MBSending build context to Docker daemon  13.93MBSending build context to Docker daemon  20.05MBSending build context to Docker daemon  26.74MBSending build context to Docker daemon  27.56MBbuild:joke-server Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  7.799MBSending build context to Docker daemon  13.93MBSending build context to Docker daemon  20.05MBSending build context to Docker daemon  26.18MBSending build context to Docker daemon  27.56MBbuild:joke-worker Step 1/8 : FROM golang:1.20.2build:joke-worker  ---> c71f9fb2e04fbuild:joke-worker Step 2/8 : WORKDIR /appbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> dcfdadaaa0e1build:joke-worker Step 3/8 : COPY go.mod go.sum ./build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2f4455b28b77build:joke-worker Step 4/8 : RUN go mod downloadbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> 1b0d02266afebuild:joke-worker Step 5/8 : COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2398dc26f185build:joke-worker Step 6/8 : COPY internal/ internal/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 731f65846c55build:joke-worker Step 7/8 : RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker  ---> Using cachebuild:joke-worker  ---> a3a3e59a4560build:joke-worker Step 8/8 : CMD ["./joke-worker"]build:joke-worker  ---> Using cachebuild:joke-worker  ---> 23fa6e002447build:joke-worker Successfully built 23fa6e002447build:joke-worker Successfully tagged vfiftyfive/joke-worker:ada7983build:joke-worker Skip image push for vfiftyfive/joke-workerbuild:joke-worker Done processing image 'vfiftyfive/joke-worker'build:joke-worker Done building image vfiftyfive/joke-worker:ada7983 (joke-worker)build:joke-worker Newly built image 'vfiftyfive/joke-worker' has the same tag as in the last build (ada7983), this can lead to problems that the image during deployment is not updatedbuild:joke-server Step 1/9 : FROM golang:1.20.2build:joke-server  ---> c71f9fb2e04fbuild:joke-server Step 2/9 : WORKDIR /appbuild:joke-server  ---> Using cachebuild:joke-server  ---> dcfdadaaa0e1build:joke-server Step 3/9 : COPY go.mod go.sum ./build:joke-server  ---> Using cachebuild:joke-server  ---> 2f4455b28b77build:joke-server Step 4/9 : RUN go mod downloadbuild:joke-server  ---> Using cachebuild:joke-server  ---> 1b0d02266afebuild:joke-server Step 5/9 : COPY cmd/joke-server/main.go cmd/joke-server/build:joke-server  ---> Using cachebuild:joke-server  ---> 1212095806e7build:joke-server Step 6/9 : COPY internal/ internal/build:joke-server  ---> Using cachebuild:joke-server  ---> 49704d3d1240build:joke-server Step 7/9 : RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server  ---> Using cachebuild:joke-server  ---> 376c8f0550e7build:joke-server Step 8/9 : EXPOSE 8080build:joke-server  ---> Using cachebuild:joke-server  ---> d2d04adb0f2fbuild:joke-server Step 9/9 : CMD ["./joke-server"]build:joke-server  ---> Using cachebuild:joke-server  ---> 0eb92e7052eabuild:joke-server Successfully built 0eb92e7052eabuild:joke-server Successfully tagged vfiftyfive/joke-server:ada7983build:joke-server Skip image push for vfiftyfive/joke-serverbuild:joke-server Done processing image 'vfiftyfive/joke-server'build:joke-server Done building image vfiftyfive/joke-server:ada7983 (joke-server)build:joke-server Newly built image 'vfiftyfive/joke-server' has the same tag as in the last build (ada7983), this can lead to problems that the image during deployment is not updatedExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:redis-operator Skipping deployment redis-operatordeploy:mongodb-operator Skipping deployment mongodb-operatorExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:joke-worker Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-worker) with helm...deploy:joke-server Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-server) with helm...deploy:custom-resources Applying manifests with kubectl...deploy:nats Skipping deployment natsdeploy:custom-resources mongodbcommunity.mongodbcommunity.mongodb.com/mongodb unchangeddeploy:custom-resources secret/user-password configureddeploy:custom-resources redis.redis.redis.opstreelabs.in/redis unchangeddeploy:custom-resources Successfully deployed custom-resources with kubectlcreate_deployments: error deploying joke-worker: unable to deploy helm chart:  error executing 'helm upgrade joke-worker --values /var/folders/_r/zmt76kyx08n98wxytr5fjpj40000gn/T/1867473556 --install --namespace dev /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz --kube-context minikube': W0523 16:28:33.622307   40258 warnings.go:70] unknown field "spec.template.spec.containers[0].env[3].valueFrom.secretMapKeyRef"Error: UPGRADE FAILED: cannot patch "joke-worker" with kind Deployment: Deployment.apps "joke-worker" is invalid: spec.template.spec.containers[0].env[3].valueFrom: Invalid value: "": must specify one of: `fieldRef`, `resourceFieldRef`, `configMapKeyRef` or `secretKeyRef`{"level":"error","msg":"exit status 1","time":"2024-05-23T16:28:33+01:00"}
{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T16:28:45+01:00"}
{"level":"info","msg":"Using kube context 'minikube'","time":"2024-05-23T16:28:45+01:00"}
build:joke-server Rebuild image vfiftyfive/joke-server because build context has changedbuild:joke-server Building image 'vfiftyfive/joke-server:ada7983' with engine 'docker'build:joke-worker Rebuild image vfiftyfive/joke-worker because build context has changedbuild:joke-worker Building image 'vfiftyfive/joke-worker:ada7983' with engine 'docker'build:joke-worker Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  8.356MBSending build context to Docker daemon  14.48MBSending build context to Docker daemon   19.5MBSending build context to Docker daemon  26.18MBSending build context to Docker daemon  27.56MBbuild:joke-server Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  7.242MBSending build context to Docker daemon  12.81MBSending build context to Docker daemon  18.38MBSending build context to Docker daemon  24.51MBSending build context to Docker daemon  27.56MBbuild:joke-worker Step 1/8 : FROM golang:1.20.2build:joke-worker  ---> c71f9fb2e04fbuild:joke-worker Step 2/8 : WORKDIR /appbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> dcfdadaaa0e1build:joke-worker Step 3/8 : COPY go.mod go.sum ./build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2f4455b28b77build:joke-worker Step 4/8 : RUN go mod downloadbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> 1b0d02266afebuild:joke-worker Step 5/8 : COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2398dc26f185build:joke-worker Step 6/8 : COPY internal/ internal/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 731f65846c55build:joke-worker Step 7/8 : RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker  ---> Using cachebuild:joke-worker  ---> a3a3e59a4560build:joke-worker Step 8/8 : CMD ["./joke-worker"]build:joke-worker  ---> Using cachebuild:joke-worker  ---> 23fa6e002447build:joke-worker Successfully built 23fa6e002447build:joke-worker Successfully tagged vfiftyfive/joke-worker:ada7983build:joke-worker Skip image push for vfiftyfive/joke-workerbuild:joke-worker Done processing image 'vfiftyfive/joke-worker'build:joke-worker Done building image vfiftyfive/joke-worker:ada7983 (joke-worker)build:joke-worker Newly built image 'vfiftyfive/joke-worker' has the same tag as in the last build (ada7983), this can lead to problems that the image during deployment is not updatedbuild:joke-server Step 1/9 : FROM golang:1.20.2build:joke-server  ---> c71f9fb2e04fbuild:joke-server Step 2/9 : WORKDIR /appbuild:joke-server  ---> Using cachebuild:joke-server  ---> dcfdadaaa0e1build:joke-server Step 3/9 : COPY go.mod go.sum ./build:joke-server  ---> Using cachebuild:joke-server  ---> 2f4455b28b77build:joke-server Step 4/9 : RUN go mod downloadbuild:joke-server  ---> Using cachebuild:joke-server  ---> 1b0d02266afebuild:joke-server Step 5/9 : COPY cmd/joke-server/main.go cmd/joke-server/build:joke-server  ---> Using cachebuild:joke-server  ---> 1212095806e7build:joke-server Step 6/9 : COPY internal/ internal/build:joke-server  ---> Using cachebuild:joke-server  ---> 49704d3d1240build:joke-server Step 7/9 : RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server  ---> Using cachebuild:joke-server  ---> 376c8f0550e7build:joke-server Step 8/9 : EXPOSE 8080build:joke-server  ---> Using cachebuild:joke-server  ---> d2d04adb0f2fbuild:joke-server Step 9/9 : CMD ["./joke-server"]build:joke-server  ---> Using cachebuild:joke-server  ---> 0eb92e7052eabuild:joke-server Successfully built 0eb92e7052eabuild:joke-server Successfully tagged vfiftyfive/joke-server:ada7983build:joke-server Skip image push for vfiftyfive/joke-serverbuild:joke-server Done processing image 'vfiftyfive/joke-server'build:joke-server Done building image vfiftyfive/joke-server:ada7983 (joke-server)build:joke-server Newly built image 'vfiftyfive/joke-server' has the same tag as in the last build (ada7983), this can lead to problems that the image during deployment is not updatedExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:redis-operator Skipping deployment redis-operatordeploy:mongodb-operator Skipping deployment mongodb-operatorExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:joke-server Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-server) with helm...deploy:joke-worker Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-worker) with helm...deploy:custom-resources Applying manifests with kubectl...deploy:nats Skipping deployment natsdeploy:custom-resources mongodbcommunity.mongodbcommunity.mongodb.com/mongodb unchangeddeploy:custom-resources secret/user-password configureddeploy:custom-resources redis.redis.redis.opstreelabs.in/redis unchangeddeploy:custom-resources Successfully deployed custom-resources with kubectlcreate_deployments: error deploying joke-worker: unable to deploy helm chart:  error executing 'helm upgrade joke-worker --values /var/folders/_r/zmt76kyx08n98wxytr5fjpj40000gn/T/936964256 --install --namespace dev /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz --kube-context minikube': W0523 16:28:48.330049   40464 warnings.go:70] unknown field "spec.template.spec.containers[0].env[3].valueFrom.secretMapKeyRef"W0523 16:28:48.330061   40464 warnings.go:70] unknown field "spec.volumeClaimTemplates"Error: UPGRADE FAILED: failed to create resource: Deployment.apps "joke-worker" is invalid: spec.template.spec.containers[0].env[3].valueFrom: Invalid value: "": must specify one of: `fieldRef`, `resourceFieldRef`, `configMapKeyRef` or `secretKeyRef`{"level":"error","msg":"exit status 1","time":"2024-05-23T16:28:48+01:00"}
{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T16:29:00+01:00"}
{"level":"info","msg":"Using kube context 'minikube'","time":"2024-05-23T16:29:00+01:00"}
Execute hook 'Delete redis resources' at before:purgeredis.redis.redis.opstreelabs.in "redis" deletedpurge:nats Deleting deployment nats...purge:nats Successfully deleted deployment natspurge:joke-server Deleting deployment joke-server...purge:joke-server Successfully deleted deployment joke-serverpurge:joke-worker Deleting deployment joke-worker...purge:joke-worker Successfully deleted deployment joke-workerpurge:custom-resources Deleting deployment custom-resources...purge:custom-resources error deleting Redis redis: request: the server could not find the requested resource (delete redis.redis.redis.opstreelabs.in redis)purge:custom-resources Successfully deleted deployment custom-resourcespurge:redis-operator Deleting deployment redis-operator...purge:redis-operator Successfully deleted deployment redis-operatorpurge:mongodb-operator Deleting deployment mongodb-operator...purge:mongodb-operator Successfully deleted deployment mongodb-operatorExecute hook 'Delete PVCs' at after:purgepersistentvolumeclaim "data-volume-mongodb-0" deletedpersistentvolumeclaim "logs-volume-mongodb-0" deletedpersistentvolumeclaim "redis-redis-0" deleted{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T16:30:21+01:00"}
{"level":"info","msg":"Using kube context 'minikube'","time":"2024-05-23T16:30:21+01:00"}
build:joke-server Rebuild image vfiftyfive/joke-server because image config has changedbuild:joke-server Building image 'vfiftyfive/joke-server:197678c' with engine 'docker'build:joke-worker Rebuild image vfiftyfive/joke-worker because image config has changedbuild:joke-worker Building image 'vfiftyfive/joke-worker:197678c' with engine 'docker'build:joke-server Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  10.03MBSending build context to Docker daemon   15.6MBSending build context to Docker daemon  21.73MBSending build context to Docker daemon  27.59MBbuild:joke-worker Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  8.356MBSending build context to Docker daemon  14.48MBSending build context to Docker daemon  20.61MBSending build context to Docker daemon  26.74MBSending build context to Docker daemon  27.59MBbuild:joke-server Step 1/9 : FROM golang:1.20.2build:joke-server  ---> c71f9fb2e04fbuild:joke-server Step 2/9 : WORKDIR /appbuild:joke-server  ---> Using cachebuild:joke-server  ---> dcfdadaaa0e1build:joke-server Step 3/9 : COPY go.mod go.sum ./build:joke-server  ---> Using cachebuild:joke-server  ---> 2f4455b28b77build:joke-server Step 4/9 : RUN go mod downloadbuild:joke-server  ---> Using cachebuild:joke-server  ---> 1b0d02266afebuild:joke-server Step 5/9 : COPY cmd/joke-server/main.go cmd/joke-server/build:joke-server  ---> Using cachebuild:joke-server  ---> 1212095806e7build:joke-server Step 6/9 : COPY internal/ internal/build:joke-server  ---> Using cachebuild:joke-server  ---> 49704d3d1240build:joke-server Step 7/9 : RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server  ---> Using cachebuild:joke-server  ---> 376c8f0550e7build:joke-server Step 8/9 : EXPOSE 8080build:joke-server  ---> Using cachebuild:joke-server  ---> d2d04adb0f2fbuild:joke-server Step 9/9 : CMD ["./joke-server"]build:joke-server  ---> Using cachebuild:joke-server  ---> 0eb92e7052eabuild:joke-server Successfully built 0eb92e7052eabuild:joke-server Successfully tagged vfiftyfive/joke-server:197678cbuild:joke-server Skip image push for vfiftyfive/joke-serverbuild:joke-server Done processing image 'vfiftyfive/joke-server'build:joke-server Done building image vfiftyfive/joke-server:197678c (joke-server)build:joke-worker Step 1/8 : FROM golang:1.20.2build:joke-worker  ---> c71f9fb2e04fbuild:joke-worker Step 2/8 : WORKDIR /appbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> dcfdadaaa0e1build:joke-worker Step 3/8 : COPY go.mod go.sum ./build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2f4455b28b77build:joke-worker Step 4/8 : RUN go mod downloadbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> 1b0d02266afebuild:joke-worker Step 5/8 : COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2398dc26f185build:joke-worker Step 6/8 : COPY internal/ internal/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 731f65846c55build:joke-worker Step 7/8 : RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker  ---> Using cachebuild:joke-worker  ---> a3a3e59a4560build:joke-worker Step 8/8 : CMD ["./joke-worker"]build:joke-worker  ---> Using cachebuild:joke-worker  ---> 23fa6e002447build:joke-worker Successfully built 23fa6e002447build:joke-worker Successfully tagged vfiftyfive/joke-worker:197678cbuild:joke-worker Skip image push for vfiftyfive/joke-workerbuild:joke-worker Done processing image 'vfiftyfive/joke-worker'build:joke-worker Done building image vfiftyfive/joke-worker:197678c (joke-worker)Execute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:redis-operator Deploying chart redis-operator (redis-operator) with helm...deploy:mongodb-operator Deploying chart community-operator (mongodb-operator) with helm...deploy:mongodb-operator Deployed helm chart (Release revision: 1)deploy:mongodb-operator Successfully deployed mongodb-operator with helmdeploy:redis-operator Deployed helm chart (Release revision: 1)deploy:redis-operator Successfully deployed redis-operator with helmExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:nats Deploying chart nats (nats) with helm...deploy:joke-server Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-server) with helm...deploy:joke-worker Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-worker) with helm...deploy:custom-resources Applying manifests with kubectl...create_deployments: error deploying joke-worker: unable to deploy helm chart: Release "joke-worker" does not exist. Installing it now.error executing 'helm upgrade joke-worker --values /var/folders/_r/zmt76kyx08n98wxytr5fjpj40000gn/T/2099619437 --install --namespace dev /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz --kube-context minikube': W0523 16:30:26.929470   42313 warnings.go:70] unknown field "spec.template.spec.containers[0].env[3].valueFrom.secretMapKeyRef"W0523 16:30:26.929486   42313 warnings.go:70] unknown field "spec.volumeClaimTemplates"Error: 1 error occurred:* Deployment.apps "joke-worker" is invalid: spec.template.spec.containers[0].env[3].valueFrom: Invalid value: "": must specify one of: `fieldRef`, `resourceFieldRef`, `configMapKeyRef` or `secretKeyRef`{"level":"error","msg":"exit status 1","time":"2024-05-23T16:30:26+01:00"}
{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T16:34:28+01:00"}
{"level":"info","msg":"Using kube context 'minikube'","time":"2024-05-23T16:34:28+01:00"}
build:joke-worker Rebuild image vfiftyfive/joke-worker because image config has changedbuild:joke-worker Building image 'vfiftyfive/joke-worker:de20333' with engine 'docker'build:joke-server Rebuild image vfiftyfive/joke-server because image config has changedbuild:joke-server Building image 'vfiftyfive/joke-server:de20333' with engine 'docker'build:joke-server Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  7.799MBSending build context to Docker daemon  13.93MBSending build context to Docker daemon   19.5MBSending build context to Docker daemon  25.62MBSending build context to Docker daemon  27.61MBbuild:joke-worker Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  7.242MBSending build context to Docker daemon  13.37MBSending build context to Docker daemon   19.5MBSending build context to Docker daemon  26.18MBSending build context to Docker daemon  27.61MBbuild:joke-server Step 1/9 : FROM golang:1.20.2build:joke-server  ---> c71f9fb2e04fbuild:joke-server Step 2/9 : WORKDIR /appbuild:joke-server  ---> Using cachebuild:joke-server  ---> dcfdadaaa0e1build:joke-server Step 3/9 : COPY go.mod go.sum ./build:joke-server  ---> Using cachebuild:joke-server  ---> 2f4455b28b77build:joke-server Step 4/9 : RUN go mod downloadbuild:joke-server  ---> Using cachebuild:joke-server  ---> 1b0d02266afebuild:joke-server Step 5/9 : COPY cmd/joke-server/main.go cmd/joke-server/build:joke-server  ---> Using cachebuild:joke-server  ---> 1212095806e7build:joke-server Step 6/9 : COPY internal/ internal/build:joke-server  ---> Using cachebuild:joke-server  ---> 49704d3d1240build:joke-server Step 7/9 : RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server  ---> Using cachebuild:joke-server  ---> 376c8f0550e7build:joke-server Step 8/9 : EXPOSE 8080build:joke-server  ---> Using cachebuild:joke-server  ---> d2d04adb0f2fbuild:joke-server Step 9/9 : CMD ["./joke-server"]build:joke-server  ---> Using cachebuild:joke-server  ---> 0eb92e7052eabuild:joke-worker Step 1/8 : FROM golang:1.20.2build:joke-worker  ---> c71f9fb2e04fbuild:joke-worker Step 2/8 : WORKDIR /appbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> dcfdadaaa0e1build:joke-worker Step 3/8 : COPY go.mod go.sum ./build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2f4455b28b77build:joke-worker Step 4/8 : RUN go mod downloadbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> 1b0d02266afebuild:joke-worker Step 5/8 : COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2398dc26f185build:joke-worker Step 6/8 : COPY internal/ internal/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 731f65846c55build:joke-worker Step 7/8 : RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker  ---> Using cachebuild:joke-worker  ---> a3a3e59a4560build:joke-worker Step 8/8 : CMD ["./joke-worker"]build:joke-worker  ---> Using cachebuild:joke-worker  ---> 23fa6e002447build:joke-server Successfully built 0eb92e7052eabuild:joke-server Successfully tagged vfiftyfive/joke-server:de20333build:joke-server Skip image push for vfiftyfive/joke-serverbuild:joke-server Done processing image 'vfiftyfive/joke-server'build:joke-server Done building image vfiftyfive/joke-server:de20333 (joke-server)build:joke-worker Successfully built 23fa6e002447build:joke-worker Successfully tagged vfiftyfive/joke-worker:de20333build:joke-worker Skip image push for vfiftyfive/joke-workerbuild:joke-worker Done processing image 'vfiftyfive/joke-worker'build:joke-worker Done building image vfiftyfive/joke-worker:de20333 (joke-worker)Execute hook 'Decrypt OPENAI_API_KEY' at before:deployFailed to get the data key required to decrypt the SOPS file.Group 0: FAILED0425B6496C542628: FAILED- | could not decrypt data key with PGP key:| github.com/ProtonMail/go-crypto/openpgp error: Could not| load secring: open /Users/nvermande/.gnupg/secring.gpg: no| such file or directory; GPG binary error: exit status 2Recovery failed because no master key was able to decrypt the file. Inorder for SOPS to recover the file, at least one key has to be successful,but none were.error: no objects passed to apply{"level":"error","msg":"exit status 1","time":"2024-05-23T16:34:30+01:00"}
{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T16:34:52+01:00"}
{"level":"info","msg":"Using kube context 'minikube'","time":"2024-05-23T16:34:52+01:00"}
build:joke-server Rebuild image vfiftyfive/joke-server because build context has changedbuild:joke-server Building image 'vfiftyfive/joke-server:de20333' with engine 'docker'build:joke-worker Rebuild image vfiftyfive/joke-worker because build context has changedbuild:joke-worker Building image 'vfiftyfive/joke-worker:de20333' with engine 'docker'build:joke-server Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  7.799MBSending build context to Docker daemon  14.48MBSending build context to Docker daemon  21.17MBSending build context to Docker daemon   27.3MBSending build context to Docker daemon  27.62MBbuild:joke-worker Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  8.356MBSending build context to Docker daemon  13.93MBSending build context to Docker daemon  20.61MBSending build context to Docker daemon  26.74MBSending build context to Docker daemon  27.62MBbuild:joke-server Step 1/9 : FROM golang:1.20.2build:joke-server  ---> c71f9fb2e04fbuild:joke-server Step 2/9 : WORKDIR /appbuild:joke-server  ---> Using cachebuild:joke-server  ---> dcfdadaaa0e1build:joke-server Step 3/9 : COPY go.mod go.sum ./build:joke-server  ---> Using cachebuild:joke-server  ---> 2f4455b28b77build:joke-server Step 4/9 : RUN go mod downloadbuild:joke-server  ---> Using cachebuild:joke-server  ---> 1b0d02266afebuild:joke-server Step 5/9 : COPY cmd/joke-server/main.go cmd/joke-server/build:joke-server  ---> Using cachebuild:joke-server  ---> 1212095806e7build:joke-server Step 6/9 : COPY internal/ internal/build:joke-server  ---> Using cachebuild:joke-server  ---> 49704d3d1240build:joke-server Step 7/9 : RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server  ---> Using cachebuild:joke-server  ---> 376c8f0550e7build:joke-server Step 8/9 : EXPOSE 8080build:joke-server  ---> Using cachebuild:joke-server  ---> d2d04adb0f2fbuild:joke-server Step 9/9 : CMD ["./joke-server"]build:joke-server  ---> Using cachebuild:joke-server  ---> 0eb92e7052eabuild:joke-server Successfully built 0eb92e7052eabuild:joke-server Successfully tagged vfiftyfive/joke-server:de20333build:joke-server Skip image push for vfiftyfive/joke-serverbuild:joke-server Done processing image 'vfiftyfive/joke-server'build:joke-server Done building image vfiftyfive/joke-server:de20333 (joke-server)build:joke-server Newly built image 'vfiftyfive/joke-server' has the same tag as in the last build (de20333), this can lead to problems that the image during deployment is not updatedbuild:joke-worker Step 1/8 : FROM golang:1.20.2build:joke-worker  ---> c71f9fb2e04fbuild:joke-worker Step 2/8 : WORKDIR /appbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> dcfdadaaa0e1build:joke-worker Step 3/8 : COPY go.mod go.sum ./build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2f4455b28b77build:joke-worker Step 4/8 : RUN go mod downloadbuild:joke-worker  ---> Using cachebuild:joke-worker  ---> 1b0d02266afebuild:joke-worker Step 5/8 : COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 2398dc26f185build:joke-worker Step 6/8 : COPY internal/ internal/build:joke-worker  ---> Using cachebuild:joke-worker  ---> 731f65846c55build:joke-worker Step 7/8 : RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker  ---> Using cachebuild:joke-worker  ---> a3a3e59a4560build:joke-worker Step 8/8 : CMD ["./joke-worker"]build:joke-worker  ---> Using cachebuild:joke-worker  ---> 23fa6e002447build:joke-worker Successfully built 23fa6e002447build:joke-worker Successfully tagged vfiftyfive/joke-worker:de20333build:joke-worker Skip image push for vfiftyfive/joke-workerbuild:joke-worker Done processing image 'vfiftyfive/joke-worker'build:joke-worker Done building image vfiftyfive/joke-worker:de20333 (joke-worker)build:joke-worker Newly built image 'vfiftyfive/joke-worker' has the same tag as in the last build (de20333), this can lead to problems that the image during deployment is not updatedExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:mongodb-operator Skipping deployment mongodb-operatordeploy:redis-operator Skipping deployment redis-operatorExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:nats Deploying chart nats (nats) with helm...deploy:joke-server Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-server) with helm...deploy:joke-worker Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-worker) with helm...deploy:custom-resources Applying manifests with kubectl...deploy:custom-resources mongodbcommunity.mongodbcommunity.mongodb.com/mongodb createddeploy:custom-resources secret/user-password createddeploy:custom-resources redis.redis.redis.opstreelabs.in/redis createddeploy:custom-resources Successfully deployed custom-resources with kubectldeploy:joke-worker Deployed helm chart (Release revision: 2)deploy:joke-worker Successfully deployed joke-worker with helmdeploy:joke-server Deployed helm chart (Release revision: 2)deploy:joke-server Successfully deployed joke-server with helmdeploy:nats Deployed helm chart (Release revision: 1)deploy:nats Successfully deployed nats with helm{"level":"warning","msg":"Are you using the correct kube context?","time":"2024-05-23T19:47:24+01:00"}
{"level":"warning","msg":"Current kube context: 'nic@otterize.com@otterize-iam-eks-tutorial-nic.eu-west-2.eksctl.io'","time":"2024-05-23T19:47:24+01:00"}
{"level":"warning","msg":"Last    kube context: 'minikube'","time":"2024-05-23T19:47:24+01:00"}
{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T19:47:26+01:00"}
{"level":"info","msg":"Using kube context 'nic@otterize.com@otterize-iam-eks-tutorial-nic.eu-west-2.eksctl.io'","time":"2024-05-23T19:47:26+01:00"}
info Created namespace: devExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key createddeploy:redis-operator Deploying chart redis-operator (redis-operator) with helm...deploy:redis-operator Deployed helm chart (Release revision: 1)deploy:redis-operator Successfully deployed redis-operator with helmExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:nats Deploying chart nats (nats) with helm...deploy:joke-worker Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-worker) with helm...deploy:joke-server Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-server) with helm...deploy:custom-resources Applying manifests with kubectl...deploy:custom-resources table.dynamodb.services.k8s.aws/jokestable createddeploy:custom-resources clientintents.k8s.otterize.com/joke-worker createddeploy:custom-resources redis.redis.redis.opstreelabs.in/redis createddeploy:custom-resources storageclass.storage.k8s.io/ebs-sc createddeploy:custom-resources Successfully deployed custom-resources with kubectldeploy:joke-worker Deployed helm chart (Release revision: 1)deploy:joke-worker Successfully deployed joke-worker with helmdeploy:joke-worker Execute hook 'Patch joke-worker' at after:deploy:joke-workerdeploy:joke-server Deployed helm chart (Release revision: 1)deploy:joke-server Successfully deployed joke-server with helmdeploy:joke-worker deployment.apps/joke-worker patcheddeploy:nats Deployed helm chart (Release revision: 1)deploy:nats Successfully deployed nats with helm{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T19:48:41+01:00"}
{"level":"info","msg":"Using kube context 'nic@otterize.com@otterize-iam-eks-tutorial-nic.eu-west-2.eksctl.io'","time":"2024-05-23T19:48:41+01:00"}
Execute hook 'Delete redis resources' at before:purgeredis.redis.redis.opstreelabs.in "redis" deletedpurge:nats Deleting deployment nats...purge:nats Successfully deleted deployment natspurge:joke-server Deleting deployment joke-server...purge:joke-server Successfully deleted deployment joke-serverpurge:joke-worker Deleting deployment joke-worker...purge:joke-worker Successfully deleted deployment joke-workerpurge:custom-resources Deleting deployment custom-resources...purge:custom-resources error deleting Redis redis: request: the server could not find the requested resource (delete redis.redis.redis.opstreelabs.in redis)purge:custom-resources Successfully deleted deployment custom-resourcespurge:redis-operator Deleting deployment redis-operator...purge:redis-operator Successfully deleted deployment redis-operatorExecute hook 'Delete PVCs' at after:purgepersistentvolumeclaim "redis-redis-0" deletedExecute hook 'Delete namespace' at after:purgenamespace "dev" deleted{"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T19:49:33+01:00"}
{"level":"info","msg":"Using kube context 'nic@otterize.com@otterize-iam-eks-tutorial-nic.eu-west-2.eksctl.io'","time":"2024-05-23T19:49:33+01:00"}
info Created namespace: devbuild:joke-server Rebuild image vfiftyfive/joke-server because image config has changedbuild:joke-server Building image 'vfiftyfive/joke-server:95470ba' with engine 'buildkit'build:joke-worker Rebuild image vfiftyfive/joke-worker because image config has changedbuild:joke-worker Building image 'vfiftyfive/joke-worker:95470ba' with engine 'buildkit'build:joke-server Execute BuildKit command with: docker buildx build --tag vfiftyfive/joke-server:95470ba --push --file cmd/joke-server/Dockerfile --platform=linux/amd64,linux/arm64 -build:joke-worker Execute BuildKit command with: docker buildx build --tag vfiftyfive/joke-worker:95470ba --push --file cmd/joke-worker/Dockerfile --platform=linux/amd64,linux/arm64 -build:joke-worker #0 building with "gifted_snyder" instance using docker-container driverbuild:joke-worker build:joke-worker #1 [internal] booting buildkitbuild:joke-server #0 building with "gifted_snyder" instance using docker-container driverbuild:joke-server build:joke-server #1 [internal] booting buildkitbuild:joke-server #1 starting container buildx_buildkit_gifted_snyder0build:joke-worker #1 starting container buildx_buildkit_gifted_snyder0build:joke-server #1 starting container buildx_buildkit_gifted_snyder0 0.5s donebuild:joke-worker #1 starting container buildx_buildkit_gifted_snyder0 0.5s donebuild:joke-server Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  6.128MB#1 DONE 0.5sbuild:joke-server build:joke-server #2 [internal] load remote build contextbuild:joke-worker Sending build context to Docker daemon  557.1kBSending build context to Docker daemon  6.128MB#1 DONE 0.5sbuild:joke-worker build:joke-worker #2 [internal] load remote build contextbuild:joke-worker Sending build context to Docker daemon  12.26MBSending build context to Docker daemon  18.38MBSending build context to Docker daemon  26.18MBSending build context to Docker daemon  27.65MBbuild:joke-server Sending build context to Docker daemon  11.14MBSending build context to Docker daemon  16.71MBSending build context to Docker daemon  23.95MBSending build context to Docker daemon  27.65MBbuild:joke-worker #2 DONE 0.5sbuild:joke-server #2 DONE 0.5sbuild:joke-server build:joke-server #2 [internal] load remote build contextbuild:joke-server #2 DONE 0.5sbuild:joke-server build:joke-server #3 copy /context /build:joke-server #3 DONE 0.1sbuild:joke-server build:joke-server #4 [linux/amd64 internal] load metadata for docker.io/library/golang:1.20.2build:joke-worker build:joke-worker #2 [internal] load remote build contextbuild:joke-worker #2 DONE 0.5sbuild:joke-worker build:joke-worker #3 copy /context /build:joke-worker #3 DONE 0.1sbuild:joke-worker build:joke-worker #4 [linux/amd64 internal] load metadata for docker.io/library/golang:1.20.2build:joke-server #4 ...build:joke-server build:joke-server #5 [auth] library/golang:pull token for registry-1.docker.iobuild:joke-server #5 DONE 0.0sbuild:joke-server build:joke-server #6 [linux/arm64 internal] load metadata for docker.io/library/golang:1.20.2build:joke-worker #4 DONE 0.8sbuild:joke-worker build:joke-worker #5 [linux/arm64 internal] load metadata for docker.io/library/golang:1.20.2build:joke-worker #5 DONE 0.8sbuild:joke-server #6 ...build:joke-server build:joke-server #4 [linux/amd64 internal] load metadata for docker.io/library/golang:1.20.2build:joke-server #4 DONE 0.8sbuild:joke-worker build:joke-worker #6 [linux/amd64 1/7] FROM docker.io/library/golang:1.20.2@sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616dbuild:joke-worker #6 resolve docker.io/library/golang:1.20.2@sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616d 0.0s donebuild:joke-worker #6 DONE 0.0sbuild:joke-worker build:joke-worker #7 [linux/amd64 5/7] COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-worker #7 CACHEDbuild:joke-worker build:joke-worker #8 [linux/amd64 2/7] WORKDIR /appbuild:joke-worker #8 CACHEDbuild:joke-worker build:joke-worker #9 [linux/amd64 3/7] COPY go.mod go.sum ./build:joke-worker #9 CACHEDbuild:joke-worker build:joke-worker #10 [linux/amd64 6/7] COPY internal/ internal/build:joke-worker #10 CACHEDbuild:joke-worker build:joke-worker #11 [linux/amd64 4/7] RUN go mod downloadbuild:joke-worker #11 CACHEDbuild:joke-worker build:joke-worker #12 [linux/amd64 7/7] RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker #12 CACHEDbuild:joke-worker build:joke-worker #13 [linux/arm64 1/7] FROM docker.io/library/golang:1.20.2@sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616dbuild:joke-worker #13 resolve docker.io/library/golang:1.20.2@sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616d 0.0s donebuild:joke-worker #13 DONE 0.0sbuild:joke-worker build:joke-worker #14 [linux/arm64 6/7] COPY internal/ internal/build:joke-worker #14 CACHEDbuild:joke-worker build:joke-worker #15 [linux/arm64 2/7] WORKDIR /appbuild:joke-worker #15 CACHEDbuild:joke-worker build:joke-worker #16 [linux/arm64 5/7] COPY cmd/joke-worker/main.go cmd/joke-worker/build:joke-worker #16 CACHEDbuild:joke-worker build:joke-worker #17 [linux/arm64 3/7] COPY go.mod go.sum ./build:joke-worker #17 CACHEDbuild:joke-worker build:joke-worker #18 [linux/arm64 4/7] RUN go mod downloadbuild:joke-worker #18 CACHEDbuild:joke-worker build:joke-worker #19 [linux/arm64 7/7] RUN go build -o joke-worker ./cmd/joke-worker/main.gobuild:joke-worker #19 CACHEDbuild:joke-worker build:joke-worker #20 exporting to imagebuild:joke-worker #20 exporting layers donebuild:joke-worker #20 exporting manifest sha256:e1c861dc9a124f3d0d345e40c826bdddd6e0033a1d1c5f767f9fdc8349c6ef88 donebuild:joke-worker #20 exporting config sha256:36f413ab6438b7ddd76b3c7e62ec50930886b5f8d025724e03072ed28072aff2 donebuild:joke-worker #20 exporting attestation manifest sha256:c17973f8e985aeb9f76c88656ee6d0a9511a09d3f594093bcc21926e7e6255f3 0.0s donebuild:joke-worker #20 exporting manifest sha256:d5527660ec6a6b955bbd13b55c301b63d6dcb3c84c97ee0d1527355eb2c673cb donebuild:joke-worker #20 exporting config sha256:bd0f786cef64e4490ebf3298cd41718909b3e374d9ef7596782a960618e6591f donebuild:joke-worker #20 exporting attestation manifest sha256:399f8bcc8ba0f0b4382cdc6021c1ef624d74f0f08ffe09ccbb5800224cdfd094build:joke-server build:joke-server #6 [linux/arm64 internal] load metadata for docker.io/library/golang:1.20.2build:joke-server #6 DONE 0.8sbuild:joke-server build:joke-server #7 [linux/amd64 1/7] FROM docker.io/library/golang:1.20.2@sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616dbuild:joke-server #7 resolve docker.io/library/golang:1.20.2@sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616d 0.0s donebuild:joke-server #7 DONE 0.0sbuild:joke-server build:joke-server #8 [linux/amd64 6/7] COPY internal/ internal/build:joke-server #8 CACHEDbuild:joke-server build:joke-server #9 [linux/amd64 3/7] COPY go.mod go.sum ./build:joke-server #9 CACHEDbuild:joke-server build:joke-server #10 [linux/amd64 5/7] COPY cmd/joke-server/main.go cmd/joke-server/build:joke-server #10 CACHEDbuild:joke-server build:joke-server #11 [linux/amd64 4/7] RUN go mod downloadbuild:joke-server #11 CACHEDbuild:joke-server build:joke-server #12 [linux/amd64 2/7] WORKDIR /appbuild:joke-server #12 CACHEDbuild:joke-server build:joke-server #13 [linux/amd64 7/7] RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server #13 CACHEDbuild:joke-server build:joke-server #14 [linux/arm64 1/7] FROM docker.io/library/golang:1.20.2@sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616dbuild:joke-server #14 resolve docker.io/library/golang:1.20.2@sha256:f7099345b8e4a93c62dc5102e7eb19a9cdbad12e7e322644eeaba355d70e616d 0.0s donebuild:joke-server #14 DONE 0.0sbuild:joke-server build:joke-server #15 [linux/arm64 5/7] COPY cmd/joke-server/main.go cmd/joke-server/build:joke-server #15 CACHEDbuild:joke-server build:joke-server #16 [linux/arm64 2/7] WORKDIR /appbuild:joke-server #16 CACHEDbuild:joke-server build:joke-server #17 [linux/arm64 6/7] COPY internal/ internal/build:joke-server #17 CACHEDbuild:joke-server build:joke-server #18 [linux/arm64 3/7] COPY go.mod go.sum ./build:joke-server #18 CACHEDbuild:joke-server build:joke-server #19 [linux/arm64 4/7] RUN go mod downloadbuild:joke-server #19 CACHEDbuild:joke-server build:joke-server #20 [linux/arm64 7/7] RUN go build -o joke-server ./cmd/joke-server/main.gobuild:joke-server #20 CACHEDbuild:joke-server build:joke-server #21 exporting to imagebuild:joke-server #21 exporting layers donebuild:joke-server #21 exporting manifest sha256:3c76165e9b8014a1e611de3ecc2665dbd8357b340623f284cfabb896401f24d2 donebuild:joke-server #21 exporting config sha256:59487f808eadbd147e70c1bc104f1798129551f278b4e893c63133bb481dd667 donebuild:joke-server #21 exporting attestation manifest sha256:356ca69eb7c0b423ad9a63498b585fa7410fa18108630dec643b770bfef771e7 0.0s donebuild:joke-server #21 exporting manifest sha256:6b6e2e9a1807fcd8564c34dc346c0a0c2d1d8ff7e94df54fa5caad65f2354cc0 donebuild:joke-server #21 exporting config sha256:1c2cc4b06c1a36f1ce51e37af4b65848aacbf8e35ec920496543845ac64be4ce donebuild:joke-server #21 exporting attestation manifest sha256:7e70527ff614df6bd7ad061f1bec301d79a682074b7507afbd455ffe1e71beaf 0.0s donebuild:joke-server #21 exporting manifest list sha256:42f7c73a76951e4143826ddf4585e8ed793cf9c4808d4924cc7f8c422fb2338dbuild:joke-server #21 exporting manifest list sha256:42f7c73a76951e4143826ddf4585e8ed793cf9c4808d4924cc7f8c422fb2338d 0.0s donebuild:joke-server #21 pushing layersbuild:joke-worker #20 exporting attestation manifest sha256:399f8bcc8ba0f0b4382cdc6021c1ef624d74f0f08ffe09ccbb5800224cdfd094 0.0s donebuild:joke-worker #20 exporting manifest list sha256:5b07185e28d012233f761305110db5347f7c4082d6b8944bdc21fa8e37612cba donebuild:joke-worker #20 pushing layersbuild:joke-server #21 ...build:joke-server build:joke-server #22 [auth] vfiftyfive/joke-server:pull,push token for registry-1.docker.iobuild:joke-server #22 DONE 0.0sbuild:joke-server build:joke-server #21 exporting to imagebuild:joke-worker #20 ...build:joke-worker build:joke-worker #21 [auth] vfiftyfive/joke-worker:pull,push token for registry-1.docker.iobuild:joke-worker #21 DONE 0.0sbuild:joke-worker build:joke-worker #20 exporting to imagebuild:joke-server #21 pushing layers 4.0s donebuild:joke-server #21 pushing manifest for docker.io/vfiftyfive/joke-server:95470ba@sha256:42f7c73a76951e4143826ddf4585e8ed793cf9c4808d4924cc7f8c422fb2338dbuild:joke-worker #20 pushing layers 5.2s donebuild:joke-worker #20 pushing manifest for docker.io/vfiftyfive/joke-worker:95470ba@sha256:5b07185e28d012233f761305110db5347f7c4082d6b8944bdc21fa8e37612cbabuild:joke-server #21 pushing manifest for docker.io/vfiftyfive/joke-server:95470ba@sha256:42f7c73a76951e4143826ddf4585e8ed793cf9c4808d4924cc7f8c422fb2338d 1.5s donebuild:joke-server #21 DONE 5.6sbuild:joke-server Done processing image 'vfiftyfive/joke-server'build:joke-server Done building image vfiftyfive/joke-server:95470ba (joke-server)build:joke-worker #20 pushing manifest for docker.io/vfiftyfive/joke-worker:95470ba@sha256:5b07185e28d012233f761305110db5347f7c4082d6b8944bdc21fa8e37612cba 1.5s donebuild:joke-worker #20 DONE 6.7sbuild:joke-worker Done processing image 'vfiftyfive/joke-worker'build:joke-worker Done building image vfiftyfive/joke-worker:95470ba (joke-worker){"level":"info","msg":"Using namespace 'dev'","time":"2024-05-23T19:49:44+01:00"}
{"level":"info","msg":"Using kube context 'nic@otterize.com@otterize-iam-eks-tutorial-nic.eu-west-2.eksctl.io'","time":"2024-05-23T19:49:44+01:00"}
Execute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key createddeploy:redis-operator Deploying chart redis-operator (redis-operator) with helm...deploy:redis-operator Deployed helm chart (Release revision: 1)deploy:redis-operator Successfully deployed redis-operator with helmExecute hook 'Decrypt OPENAI_API_KEY' at before:deploysecret/openai-api-key configureddeploy:nats Deploying chart nats (nats) with helm...deploy:joke-server Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-server) with helm...deploy:joke-worker Deploying chart /Users/nvermande/.devspace/component-chart/component-chart-0.9.1.tgz (joke-worker) with helm...deploy:custom-resources Applying manifests with kubectl...deploy:custom-resources table.dynamodb.services.k8s.aws/jokestable createddeploy:custom-resources clientintents.k8s.otterize.com/joke-worker createddeploy:custom-resources redis.redis.redis.opstreelabs.in/redis createddeploy:custom-resources storageclass.storage.k8s.io/ebs-sc createddeploy:custom-resources Successfully deployed custom-resources with kubectldeploy:joke-worker Deployed helm chart (Release revision: 1)deploy:joke-worker Successfully deployed joke-worker with helmdeploy:joke-worker Execute hook 'Patch joke-worker' at after:deploy:joke-workerdeploy:joke-server Deployed helm chart (Release revision: 1)deploy:joke-server Successfully deployed joke-server with helmdeploy:joke-worker deployment.apps/joke-worker patcheddeploy:nats Deployed helm chart (Release revision: 1)deploy:nats Successfully deployed nats with helm